name: shell Commands
on:
  push:
    branches:
        - master

jobs:
   deploy:
    name: deployment
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.8]
        node-version: ['12.x']
        appname: ['cakephpapp']
        deploy-group: ['staging']
        s3-filename: ['staging-cakephpapp-${{ github.sha }}']
    steps:
      - name: install php
        run: |
          sudo update-alternatives --set php /usr/bin/php7.2
          php -v

      # - name: Install AWS Client
      #   run: |
      #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #     unzip awscliv2.zip
      #     sudo ./aws/install
      - name: install composer
        run: |
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
        php composer-setup.php
        php -r "unlink('composer-setup.php');"
      - name: Checkout
        uses: actions/checkout@v2

      - name: download dependencies
        run: |
          composer install
          ls
          
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AES_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1

      # # Deploy push to AWS S3
      # - name: AWS Deploy push
      #   run: |
      #     aws deploy push \
      #     --application-name ${{ matrix.appname }} \
      #     --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
      #     --ignore-hidden-files \
      #     --s3-location s3://${{secrets.S3_BUCKET_NAME}}/${{ matrix.s3-filename }}.zip \
      #     --source .

      # # Create deployment to CodeDeploy
      # - name: AWS Create Deployment
      #   run: |
      #     aws deploy create-deployment \
      #      --application-name ${{ matrix.appname }} \
      #      --deployment-config-name CodeDeployDefault.OneAtATime \
      #      --deployment-group-name ${{ matrix.deploy-group }} \
      #      --file-exists-behavior OVERWRITE \
      #      --ignore-application-stop-failures \
      #      --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},key=${{ matrix.s3-filename }}.zip,bundleType=zip \
